[gd_resource type="ShaderMaterial" load_steps=37 format=2]

[ext_resource path="res://Textures/noisetexture.tres" type="Texture" id=1]
[ext_resource path="res://Materials/outline_black.tres" type="Material" id=2]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=2]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=3]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]

[sub_resource type="VisualShaderNodeTexture" id=4]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=6]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 0.0, 1, 3.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarConstant" id=8]
constant = 1.0

[sub_resource type="VisualShaderNodeScalarConstant" id=9]

[sub_resource type="VisualShaderNodeInput" id=10]
output_port_for_preview = 0
input_name = "color"

[sub_resource type="VisualShaderNodeScalarConstant" id=11]
constant = 0.5

[sub_resource type="VisualShaderNodeInput" id=12]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarConstant" id=13]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorOp" id=14]
operator = 1

[sub_resource type="VisualShaderNodeVectorDecompose" id=15]

[sub_resource type="VisualShaderNodeScalarFunc" id=16]
function = 27

[sub_resource type="VisualShaderNodeScalarFunc" id=17]
output_port_for_preview = 0
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=18]
output_port_for_preview = 0
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=19]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=20]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=21]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=22]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=23]

[sub_resource type="VisualShaderNodeScalarOp" id=24]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=25]
default_input_values = [ 0, 0.0, 1, 0.5 ]

[sub_resource type="VisualShaderNodeScalarOp" id=26]
default_input_values = [ 0, 0.0, 1, 0.5 ]

[sub_resource type="VisualShaderNodeVectorCompose" id=27]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=28]
output_port_for_preview = 0
function = 23

[sub_resource type="VisualShaderNodeScalarOp" id=29]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=30]
output_port_for_preview = 0
default_input_values = [ 0, 0.2, 1, 0.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=31]
input_name = "time"

[sub_resource type="VisualShaderNodeFresnel" id=32]
output_port_for_preview = 0
default_input_values = [ 2, false, 3, 0.5 ]

[sub_resource type="VisualShaderNodeScalarFunc" id=33]
output_port_for_preview = 0
function = 0

[sub_resource type="VisualShader" id=34]
code = "shader_type spatial;
render_mode diffuse_toon, specular_toon;

uniform sampler2D tex_frg_14;



void vertex() {
// Output:0

}

void fragment() {
// Scalar:22
	float n_out22p0 = 0.500000;

// Input:21
	vec3 n_out21p0 = vec3(UV, 0.0);

// VectorOp:24
	vec3 n_out24p0 = vec3(n_out22p0) - n_out21p0;

// VectorDecompose:25
	float n_out25p0 = n_out24p0.x;
	float n_out25p1 = n_out24p0.y;
	float n_out25p2 = n_out24p0.z;

// Input:6
	float n_out6p0 = TIME;

// ScalarFunc:38
	float n_out38p0 = degrees(n_out6p0);

// ScalarOp:39
	float n_in39p1 = 1.00000;
	float n_out39p0 = n_out38p0 / n_in39p1;

// ScalarFunc:26
	float n_out26p0 = radians(n_out39p0);

// ScalarFunc:27
	float n_out27p0 = cos(n_out26p0);

// ScalarOp:29
	float n_out29p0 = n_out25p0 * n_out27p0;

// ScalarFunc:28
	float n_out28p0 = sin(n_out26p0);

// ScalarOp:30
	float n_out30p0 = n_out25p1 * n_out28p0;

// ScalarOp:33
	float n_out33p0 = n_out29p0 + n_out30p0;

// ScalarOp:35
	float n_in35p1 = 0.50000;
	float n_out35p0 = n_out33p0 + n_in35p1;

// ScalarOp:31
	float n_out31p0 = n_out25p1 * n_out27p0;

// ScalarOp:32
	float n_out32p0 = n_out25p0 * n_out28p0;

// ScalarOp:34
	float n_out34p0 = n_out31p0 - n_out32p0;

// ScalarOp:36
	float n_in36p1 = 0.50000;
	float n_out36p0 = n_out34p0 + n_in36p1;

// VectorCompose:37
	float n_in37p2 = 0.00000;
	vec3 n_out37p0 = vec3(n_out35p0, n_out36p0, n_in37p2);

// Texture:14
	vec4 tex_frg_14_read = texture(tex_frg_14, n_out37p0.xy);
	vec3 n_out14p0 = tex_frg_14_read.rgb;
	float n_out14p1 = tex_frg_14_read.a;

// ScalarOp:16
	float n_in16p1 = 0.00000;
	float n_out16p0 = dot(n_out14p0, vec3(0.333333, 0.333333, 0.333333)) + n_in16p1;

// ScalarOp:17
	float n_in17p1 = 3.00000;
	float n_out17p0 = n_out16p0 / n_in17p1;

// Fresnel:7
	bool n_in7p2 = false;
	float n_in7p3 = 0.50000;
	float n_out7p0 = n_in7p2 ? (pow(clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in7p3)) : (pow(1.0 - clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in7p3));

// ScalarOp:4
	float n_out4p0 = n_out17p0 * n_out7p0;

// ScalarOp:12
	float n_in12p1 = 0.00000;
	float n_out12p0 = n_out4p0 + n_in12p1;

// Scalar:20
	float n_out20p0 = 0.500000;

// Scalar:18
	float n_out18p0 = 1.000000;

// Scalar:19
	float n_out19p0 = 0.000000;

// Input:2
	vec3 n_out2p0 = COLOR.rgb;

// Output:0
	ALBEDO = vec3(n_out12p0);
	METALLIC = n_out20p0;
	ROUGHNESS = n_out18p0;
	SPECULAR = n_out19p0;
	SSS_STRENGTH = dot(n_out2p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 294, -292 )
modes/diffuse = 4
modes/specular = 3
nodes/fragment/0/position = Vector2( 1080, 160 )
nodes/fragment/2/node = SubResource( 10 )
nodes/fragment/2/position = Vector2( 340, 620 )
nodes/fragment/4/node = SubResource( 30 )
nodes/fragment/4/position = Vector2( 540, 140 )
nodes/fragment/6/node = SubResource( 31 )
nodes/fragment/6/position = Vector2( -1949.5, -590.368 )
nodes/fragment/7/node = SubResource( 32 )
nodes/fragment/7/position = Vector2( -100, 180 )
nodes/fragment/8/node = SubResource( 33 )
nodes/fragment/8/position = Vector2( -840.16, -284.992 )
nodes/fragment/11/node = SubResource( 1 )
nodes/fragment/11/position = Vector2( -580.16, -324.992 )
nodes/fragment/12/node = SubResource( 2 )
nodes/fragment/12/position = Vector2( 880, 20 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( -340.16, -244.992 )
nodes/fragment/14/node = SubResource( 4 )
nodes/fragment/14/position = Vector2( 40, -420 )
nodes/fragment/15/node = SubResource( 5 )
nodes/fragment/15/position = Vector2( -220.16, -384.992 )
nodes/fragment/16/node = SubResource( 6 )
nodes/fragment/16/position = Vector2( 140, -120 )
nodes/fragment/17/node = SubResource( 7 )
nodes/fragment/17/position = Vector2( 360, -20 )
nodes/fragment/18/node = SubResource( 8 )
nodes/fragment/18/position = Vector2( 760, 360 )
nodes/fragment/19/node = SubResource( 9 )
nodes/fragment/19/position = Vector2( 760, 440 )
nodes/fragment/20/node = SubResource( 11 )
nodes/fragment/20/position = Vector2( 760, 280 )
nodes/fragment/21/node = SubResource( 12 )
nodes/fragment/21/position = Vector2( -1549.5, -950.368 )
nodes/fragment/22/node = SubResource( 13 )
nodes/fragment/22/position = Vector2( -1560, -1040 )
nodes/fragment/24/node = SubResource( 14 )
nodes/fragment/24/position = Vector2( -1349.5, -1010.37 )
nodes/fragment/25/node = SubResource( 15 )
nodes/fragment/25/position = Vector2( -1109.5, -1010.37 )
nodes/fragment/26/node = SubResource( 16 )
nodes/fragment/26/position = Vector2( -1349.5, -770.368 )
nodes/fragment/27/node = SubResource( 17 )
nodes/fragment/27/position = Vector2( -1109.5, -830.368 )
nodes/fragment/28/node = SubResource( 18 )
nodes/fragment/28/position = Vector2( -1109.5, -650.368 )
nodes/fragment/29/node = SubResource( 19 )
nodes/fragment/29/position = Vector2( -809.504, -1030.37 )
nodes/fragment/30/node = SubResource( 20 )
nodes/fragment/30/position = Vector2( -809.504, -870.368 )
nodes/fragment/31/node = SubResource( 21 )
nodes/fragment/31/position = Vector2( -809.504, -730.368 )
nodes/fragment/32/node = SubResource( 22 )
nodes/fragment/32/position = Vector2( -809.504, -590.368 )
nodes/fragment/33/node = SubResource( 23 )
nodes/fragment/33/position = Vector2( -489.504, -930.368 )
nodes/fragment/34/node = SubResource( 24 )
nodes/fragment/34/position = Vector2( -489.504, -750.368 )
nodes/fragment/35/node = SubResource( 25 )
nodes/fragment/35/position = Vector2( -249.504, -930.368 )
nodes/fragment/36/node = SubResource( 26 )
nodes/fragment/36/position = Vector2( -249.504, -750.368 )
nodes/fragment/37/node = SubResource( 27 )
nodes/fragment/37/position = Vector2( 0, -860 )
nodes/fragment/38/node = SubResource( 28 )
nodes/fragment/38/position = Vector2( -1740, -760 )
nodes/fragment/39/node = SubResource( 29 )
nodes/fragment/39/position = Vector2( -1540, -740 )
nodes/fragment/connections = PoolIntArray( 6, 0, 8, 0, 12, 0, 0, 0, 11, 0, 13, 0, 8, 0, 11, 0, 14, 0, 16, 0, 7, 0, 4, 1, 4, 0, 12, 0, 2, 0, 0, 16, 16, 0, 17, 0, 17, 0, 4, 0, 18, 0, 0, 3, 19, 0, 0, 4, 20, 0, 0, 2, 22, 0, 24, 0, 21, 0, 24, 1, 24, 0, 25, 0, 26, 0, 27, 0, 26, 0, 28, 0, 25, 0, 29, 0, 25, 0, 32, 0, 25, 1, 30, 0, 25, 1, 31, 0, 27, 0, 29, 1, 27, 0, 31, 1, 28, 0, 30, 1, 28, 0, 32, 1, 29, 0, 33, 0, 30, 0, 33, 1, 31, 0, 34, 0, 32, 0, 34, 1, 33, 0, 35, 0, 34, 0, 36, 0, 35, 0, 37, 0, 36, 0, 37, 1, 37, 0, 14, 0, 6, 0, 38, 0, 38, 0, 39, 0, 39, 0, 26, 0 )

[resource]
next_pass = ExtResource( 2 )
shader = SubResource( 34 )
